// Generated by CoffeeScript 1.4.0
(function() {

  (function($) {
    var $add_course_button, $class_type_button, $department_list, class_filter, class_type, filtered_courses, have_class, student_id;
    $class_type_button = $('.class_button');
    $department_list = $('.department-list');
    $add_course_button = $('.add-course');
    have_class = function() {
      return $('.swapblock-tab').eq(0).hasClass('active');
    };
    student_id = parseInt($('.profile-title').data('studentId'));
    $('.delete-course').on('click', function(e) {
      var class_type;
      console.log('click');
      class_type = $(this).closest('.well').find('.class-badge').text();
      return console.log("Deleting a " + class_type + " for this id: " + student_id + " and has: " + (have_class()));
    });
    $('nav-tabs li').on('click', function(e) {
      $(this).tab('show');
    });
    $class_type_button.on('click', function(e) {
      var $class_options, $time_options;
      console.log('reset modal');
      $class_options = $('#classes');
      $class_options.hide();
      $time_options = $('#times');
      $time_options.hide();
      return $department_list.val('None');
    });
    class_filter = {};
    filtered_courses = [];
    class_type = '';
    $department_list.on('change', function(e) {
      var $class_type, department;
      class_filter = {};
      filtered_courses = [];
      class_type = '';
      console.log('here');
      department = $(this).val();
      class_filter['department'] = department;
      $class_type = $('.class_button.active');
      class_type = $class_type.val();
      if ($class_type.length) {
        $.getJSON("/" + ($class_type.val()) + "/" + department + "/", function(classes) {
          var $class_options, $class_select, $time_options, $time_select, course, teacher, _i, _len, _ref;
          console.log(classes);
          $class_options = $('#classes');
          $class_select = $class_options.find('.class-list');
          $time_options = $('#times');
          $time_select = $time_options.find('#inputTimes');
          $class_options.find('label').text("" + ($class_type.val()) + "s:");
          teacher = '';
          switch ($class_type.val()) {
            case 'lecture':
              teacher = 'professor';
              break;
            case 'section':
              teacher = 'ta';
              break;
            case 'lab':
              teacher = 'instructor';
          }
          $class_select.find('option').remove();
          $class_select.append($('<option />').val("None"));
          _ref = classes["" + ($class_type.val()) + "s"];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            course = _ref[_i];
            $class_select.append($('<option />').val(course.name).text("" + course.name + ": " + course[teacher]));
          }
          $class_options.show();
          $class_options.unbind().bind('change', function(e) {
            var _j, _len1;
            $time_options.hide();
            $time_select.find('option').remove();
            $time_select.append($('<option />').val("None"));
            class_filter[teacher] = $(this).find(':selected').text().split(':')[1].trim();
            class_filter['name'] = $(this).find(':selected').val();
            console.log(class_filter);
            filtered_courses = _.where(classes["" + ($class_type.val()) + "s"], class_filter);
            for (_j = 0, _len1 = filtered_courses.length; _j < _len1; _j++) {
              course = filtered_courses[_j];
              console.log("IN HERE");
              $time_select.append($('<option />').val(course.time).text("" + course.days + " at " + course.time));
            }
            return $time_options.show();
          });
          $time_options.on('change', function(e) {
            class_filter['time'] = $(this).find(':selected').val();
            filtered_courses = _.where(classes["" + ($class_type.val()) + "s"], class_filter);
            $('.add-course').removeClass('disabled');
            console.log(class_filter);
            return console.log(filtered_courses);
          });
        });
      }
    });
    return $add_course_button.on('click', function(e) {
      var add_class_params, selected_course;
      if ($(this).hasClass('disabled')) {
        return;
      }
      selected_course = filtered_courses[0];
      add_class_params = JSON.stringify({
        class_type: class_type,
        class_id: selected_course.id,
        have_class: have_class(),
        student_id: student_id
      });
      class_filter = {};
      filtered_courses = [];
      class_type = '';
      console.log(add_class_params);
      $.when($.post('/swapblock/add', {
        params: add_class_params
      })).then(function() {
        return console.log('po');
      });
      return $('#myModal').modal('hide');
    });
  })(jQuery);

}).call(this);
